git config
git config –global user.name “[name]”  
git config –global user.email “[email address]”  
	-	This command sets the author name and email address respectively to be used with your commits.

# Init
git init [repository name]: This command is used to start a new repository.

# Clone
git clone [url]: This command is used to obtain a repository from an existing URL.

# Add
git add [file]: This command adds file to the staging area.
git add *: This command adds one or more to the staging area.

# Commit
git commit -m "commit message": This command records or snapshots the file permanently in the version history.
git commit -a: This command commits any files you’ve added with the git add command and also commits any files you’ve changed since then.

# Diff	
git diff: This command shows the file differences which are not yet staged.
git diff –staged: This command shows the differences between the files in the staging area and the latest version present.
git diff [first branch] [second branch]: This command shows the differences between the two branches mentioned.

# Reset
git reset [file]: This command unstages the file, but it preserves the file contents.
git reset [commit]: This command undoes all the commits after the specified commit and preserves the changes locally.
git reset –hard [commit]: This command discards all history and goes back to the specified commit.

# Status
git status: This command lists all the files that have to be committed.

# Remove
git rm [file]: This command deletes the file from your working directory and stages the deletion.

# Log
git log --oneline: This command is used to list the history in one line.
git log: This command is used to list the version history for the current branch.
git log –follow[file]: This command lists version history for a file, including the renaming of files also.
git log --stat: This command shows the file(s) that have been modified, the number of lines that have been added or removed and also displays a summary line of the total number of files changed and the lines that have been added or removed.
git shortlog: Enables us to see group commits by their authors.
git shortlog -s: Shows the number of commits made by each author.
git shortlog -n: Shows logs by sorting it numerically.
git shortlog -s -n: Shows logs
git log --pretty="%cn committed %h on %cd": customize the log output in the terminal by using the --pretty flag.
git log --author="author name": Shows logs by author
git log --author="author name" --oneline: Shows logs by author in oneline for each commit

# Show
git show [commit]: This command shows the metadata and content changes of the specified commit.

# Tag
git tag [commitID]: This command is used to give tags to the specified commit.

# Branch
git branch:	This command lists all the local branches in the current repository.
git branch [branch name]: This command creates a new branch.
git branch -d [branch name]: This command deletes the feature branch.

# Checkout
git checkout [branch name]: This command is used to switch from one branch to another.
git checkout -b [branch name]: This command creates a new branch and also switches to it.

# Merge
git merge [branch name]: This command merges the specified branch’s history into the current branch.

# Remote
git remote add [variable name] [Remote Server Link]: This command is used to connect your local repository to the remote server.

# Push
git push [variable name] master: This command sends the committed changes of master branch to your remote repository.
git push [variable name] [branch]: This command sends the branch commits to your remote repository.
git push –all [variable name]: This command pushes all branches to your remote repository.
git push [variable name] :[branch name]: This command deletes a branch on your remote repository.

# Pull
git pull [Repository Link]: This command fetches and merges changes on the remote server to your working directory.

# Stash
git stash save: This command temporarily stores all the modified tracked files.
git stash pop: This command restores the most recently stashed files.
git stash list: This command lists all stashed changesets.
git stash drop: This command discards the most recently stashed changeset.